/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package demo;

import static demo.DemoStart.mobno1;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author anshul
 */
public class Acknowlegement extends javax.swing.JFrame {


    public Acknowlegement() {
        initComponents();
    }
    
    public Acknowlegement(String points_used,String points_granted,String points_remaining,String payble)
    {
        initComponents();
        //set all points to text field
        System.out.println(points_granted);
        Usedpoints.setText(points_used);
        cashback.setText(points_granted);
        PointsRemain.setText(points_remaining);
        payble_amt.setText(payble);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Backhome = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        cashback = new javax.swing.JLabel();
        PointsRemain = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Usedpoints = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        payble_amt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Acknowledgment");

        jLabel2.setText("Points Remaining");

        jLabel3.setText("THANK       YOU");

        Backhome.setText("Back To HOME PAGE");
        Backhome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackhomeActionPerformed(evt);
            }
        });

        jLabel4.setText("Cashback on this Transaction");

        jLabel5.setText("Points Used");

        Usedpoints.setText("jLabel6");

        jLabel6.setText("Payable amount");

        payble_amt.setText("jLabel7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Backhome, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(129, 129, 129))
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel3))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Usedpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PointsRemain, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cashback, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(payble_amt, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Usedpoints, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cashback, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PointsRemain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(payble_amt, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                        .addGap(5, 5, 5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(Backhome, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static String find_points_used(String totalpoint,String tran_amt,String userid)
    {
        int itran_amt= Integer.parseInt(tran_amt);
        int itotalpoint= Integer.parseInt(totalpoint);
        //if transaction amount is more than points
        if(itran_amt>=itotalpoint)
        {
            try {
                Connection c = DBClass.getConnection();
                final PreparedStatement ps = c.prepareStatement("UPDATE Points_granted SET flag=? WHERE Userid = ?");
                ps.setString(1, "0");
                ps.setString(2, userid);
                ps.executeUpdate();
            } catch (Exception ex) {
                Logger.getLogger(Acknowlegement.class.getName()).log(Level.SEVERE, null, ex);
            } 
         return totalpoint;
        }         
        
        //if transaction amount is less than points
        if(itran_amt<itotalpoint)
        {
            try {
                //delete points which are older
                //retrive data
                Connection c = DBClass.getConnection();                
                final PreparedStatement ps = c.prepareStatement("SELECT * Points_granted WHERE Userid =? and flag=? ORDER BY Date ASC");
                ps.setString(1, userid);
                ps.setString(2, "1");
                final ResultSet resultSet = ps.executeQuery();
                while(resultSet.next())
                {
                    String Serialno=resultSet.getString("SerialNo");
                    if(itotalpoint>0)
                    {
                        String points=resultSet.getString("Points_remain");
                        int ipoints=Integer.parseInt(points);
                        if(itotalpoint>=ipoints)
                        {
                            itotalpoint=itotalpoint-ipoints;
                            ipoints=0;
                            String points1=String.valueOf(ipoints);
                            String flag="0";
                            setflag(points1,flag,Serialno);
                            
                        //set flag to 0
                        }
                        if(itotalpoint<ipoints)
                        {
                            itotalpoint=0;
                            ipoints=ipoints-itotalpoint;
                            String points1=String.valueOf(ipoints);
                            String flag="1";
                        //set totalpoint to ipoints-itotalpoint
                            setflag(points1,flag,Serialno);
                        }
                    }
                }    
              
                return tran_amt;
            } catch (Exception ex) {
                Logger.getLogger(Acknowlegement.class.getName()).log(Level.SEVERE, null, ex);
            }
        }        
        return null;       
    }
    
    private static void setflag(String points,String flag,String Serialno)
    {
        try {
                Connection c = DBClass.getConnection();
                final PreparedStatement ps = c.prepareStatement("UPDATE Points_granted SET flag=?,Points_remain=? WHERE SerialNo = ?");
                ps.setString(1, flag);
                ps.setString(2, points);
                ps.setString(3,Serialno);
                ps.executeUpdate();
            } catch (Exception ex) {
                Logger.getLogger(Acknowlegement.class.getName()).log(Level.SEVERE, null, ex);
            }  
    }
    
    public static String points_granted(String tran_amnt,String userid)
    {
        //retrive data from config table
        System.out.println("i m in points granted");
        try {
            Connection c = DBClass.getConnection();
            
            final PreparedStatement ps = c.prepareStatement("SELECT * from config");
            final ResultSet resultSet = ps.executeQuery();
            
            while(resultSet.next())
            {
            String ll = resultSet.getString("lower_limit");
            String ul = resultSet.getString("upperlimit");
            String cashback_per =resultSet.getString("Cashback_per");
            int ill=Integer.parseInt(ll);
            int iul=Integer.parseInt(ul);
            int icashback_per = Integer.parseInt(cashback_per);
            int itran_amt=Integer.parseInt(tran_amnt);
            int icashback;
            if(ill<=itran_amt&&itran_amt<iul)
            {
                icashback=(itran_amt*icashback_per)/100;
                System.out.println(icashback);
                String cashback1=String.valueOf(icashback);
                //set data into points_granted table
                String one="1";
                String query1 = "insert into Points_granted values (NULL,'"+cashback1+"',now(),'"+userid+"','"+one+"','"+cashback1+"')";
                Connection con = DBClass.getConnection();
                Statement stmt = con.createStatement();
                stmt.executeUpdate(query1);
                return cashback1;                
            }
            }
         //   c.close();
                  
        } catch (Exception ex) {
            Logger.getLogger(Transaction.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
        //use it to calculate cashback
        //insert it to points granted table              
    }
    
    public static String points_remaining(String points_granted,String point_used,String totalpoint)
    {
        int ipoints_gran=Integer.parseInt(points_granted);
        int ipoint_used=Integer.parseInt(point_used);
        int itotalpoint=Integer.parseInt(totalpoint);
        int ipoints_remaining;
        ipoints_remaining = itotalpoint-ipoint_used+ipoints_gran;
        String points_remaining=String.valueOf(ipoints_remaining);
        return points_remaining;        
    }
    
    private void BackhomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackhomeActionPerformed
        DemoStart ds = new DemoStart();
        ds.setVisible(true);
        dispose();
    }//GEN-LAST:event_BackhomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Acknowlegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Acknowlegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Acknowlegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Acknowlegement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Acknowlegement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backhome;
    private javax.swing.JLabel PointsRemain;
    private javax.swing.JLabel Usedpoints;
    private javax.swing.JLabel cashback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel payble_amt;
    // End of variables declaration//GEN-END:variables
}
